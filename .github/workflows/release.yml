name: Release Pipeline

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2

    - name: Install Composer dependencies
      run: composer install --no-dev --optimize-autoloader

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install and build frontend
      run: |
        npm ci
        npm run build

    - name: Create release package
      run: |
        echo "Creating release package..."
        mkdir -p release
        tar -czf release/invoiceshelf-${{ github.ref_name }}.tar.gz \
          --exclude=node_modules \
          --exclude=.git \
          --exclude=tests \
          --exclude=.github \
          --exclude=.env.example \
          --exclude=.env.ci \
          --exclude=storage/logs/* \
          --exclude=storage/app/public/* \
          .

    - name: Generate changelog
      id: changelog
      run: |
        echo "Generating changelog..."
        if [ -f "CHANGELOG.md" ]; then
          # Extraer el changelog de la versi√≥n actual
          CHANGELOG=$(sed -n '/^## \[.*\]/,/^## \[.*\]/p' CHANGELOG.md | head -n -1)
        else
          CHANGELOG="Release ${{ github.ref_name }}"
        fi
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: InvoiceShelf ${{ github.ref_name }}
        body: |
          ## Changes in this release
          
          ${{ steps.changelog.outputs.changelog }}
          
          ## Installation
          
          1. Download the release package below
          2. Extract to your web server
          3. Follow the [installation guide](https://docs.invoiceshelf.com/installation.html)
          
          ## Upgrade Instructions
          
          1. Backup your current installation
          2. Download and extract the new version
          3. Copy your `.env` file from the old installation
          4. Run `php artisan migrate --force`
          5. Clear cache: `php artisan cache:clear`
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release/invoiceshelf-${{ github.ref_name }}.tar.gz
        asset_name: invoiceshelf-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip

  docker-release:
    runs-on: ubuntu-latest
    needs: create-release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          invoiceshelf/invoiceshelf:latest
          invoiceshelf/invoiceshelf:${{ github.ref_name }}
        platforms: linux/amd64,linux/arm64

  notify-release:
    runs-on: ubuntu-latest
    needs: [create-release, docker-release]
    if: always()

    steps:
    - name: Notify release success
      if: needs.create-release.result == 'success'
      run: |
        echo "üéâ Release ${{ github.ref_name }} created successfully!"
        echo "GitHub Release: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"

    - name: Notify release failure
      if: needs.create-release.result == 'failure'
      run: |
        echo "‚ùå Release creation failed for ${{ github.ref_name }}"
        exit 1
